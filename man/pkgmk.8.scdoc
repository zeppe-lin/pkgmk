PKGMK(8)

# NAME

pkgmk - build an installable software package

# SYNOPSIS

*pkgmk* {*-h* | *-v*}

*pkgmk* [*-cf* _config-file_]
{*-do* | *-eo* [*-d*] | *-cm* [*-d*] | *-um* [*-d*] | *-uf* | *-utd* | *-c*}

*pkgmk* [*-cf* _config-file_] [*-f*] [*-ns*] [*-kw*] \
[*-af* _archive-format_] [*-d*] [*-im*] [*-if*] [*-in*]

# DESCRIPTION

The *pkgmk* utility builds software into an installable package
archives for use with *pkgadd*(8).

Each build is driven by a _Pkgfile_ in the current directory, which
defines the source files to fetch and the commands to run.

*pkgmk* downloads any missing sources, verifies their integrity, and
extracts them into a work directory.
It then executes the build instructions defined in the _Pkgfile_.
To determine if a build is necessary, *pkgmk* compares the
last-modification times of the source files and the _Pkgfile_ with the
timestamp of the last built package.
If any of these files are newer, the package is rebuilt.
Otherwise, the existing package is considered up to date unless the
*-f* flag is specified.
Upon a successful build, *pkgmk* creates a package archive as
described in packages(7).

The options are as follows.
Command-line options always override defaults in *pkgmk.conf*(5).

## General options

*-cf* _config-file_, *--config-file*=_config-file_
	Use an alternate configuration file.

	Default: _/etc/pkgmk.conf_.

*-h*, *--help*
	Print usage and exit.

*-v*, *--version*
	Print version and exit.

## One-shot actions

These options perform a single task and then exit.
They cannot be combined with build modifiers, unless noted.

*-c*, *--clean*
	Remove the built package and downloaded sources, then exit.

*-cm*, *--check-md5sum*
	Verify source checksums against _.md5sum_, then exit.

	May be combined with *-d*.

*-do*, *--download-only*
	Download missing sources only, then exit.

*-eo*, *--extract-only*
	Download and extract sources to the work directory, then exit.

*-uf*, *--update-footprint*
	Update _.footprint_ with the file list from the last built
	package, then exit.

	Use this to accept the last build as correct when the
	footprint check failed.

*-um*, *--update-md5sum*
	Regenerate _.md5sum_ from current sources, then exit.

	May be combined with *-d*.

*-utd*, *--up-to-date*
	Check if the package is up to date, then exit.

## Build modifiers

These options adjust how a normal build is performed.
They may be combined freely.

*-af* _archive-format_, *--archive-format*=_archive-format_
	Use an alternate archive format for created packages.

	Supported formats:

	gnutar
		GNU tar format.
	pax
		POSIX 1003.1-2001 (pax) format.
	ustar
		POSIX 1003.1-1988 (ustar) format.
	v7
		Old V7 tar format.

	See *packages*(7) and *libarchive-formats*(5).

	Default: gnutar.

*-d*, *--download*
	Download missing source files before building.

*-f*, *--force*
	Rebuild even if the package is up to date.

*-if*, *--ignore-footprint*
	Build without checking footprint.

*-im*, *--ignore-md5sum*
	Build without verifying source checksums.

*-in*, *--ignore-new*
	Build, ignoring new files reported in footprint mismatch.

*-kw*, *--keep-work*
	Keep the temporary working directory after build.

*-ns*, *--no-strip*
	Do not strip binaries and libraries.

# FILES

_/etc/pkgmk.conf_
	The default configuration file.

	See *pkgmk.conf*(5).

_Pkgfile_
	The build script for a package.

	See *pkgmk.Pkgfile*(5).

_.md5sum_
	A file containing checksums for source files.

	See *pkgmk.md5sum*(5).

_.footprint_
	A record of files included in a built package.

	See *pkgmk.footprint*(5).

_.nostrip_
	A file listing exceptions for stripping binaries and
	libraries.

	See *pkgmk.nostrip*(5).

_.32bit_
	A flag file enabling 32-bit build mode.

	See *pkgmk.32bit*(5).


# EXIT STATUS

The *pkgmk* utility exits with one of the following values:

*0*
	Success.
*1*
	General error.
*2*
	Invalid _Pkgfile_
	(missing required variables or functions).
*3*
	Missing directory or permission error
	(source/build directories).
*4*
	Failed to download sources.
*5*
	Failed to unpack sources.
*6*
	MD5 checksum verification failed.
*7*
	Package footprint check failed.
*8*
	Error during execution of the *build()* function.
*130*
	Interrupted or terminated by *C-c*.

# SEE ALSO

*libarchive-formats*(5)

*pkgmk.conf*(5),
*pkgmk.Pkgfile*(5),
*pkgmk.md5sum*(5),
*pkgmk.footprint*(5),
*pkgmk.nostrip*(5),
*pkgmk.32bit*(5)

*packages*(7),
*packaging*(7)

; # HISTORY
; 
; The *pkgmk* utility first appeared in CRUX Linux and has been
; maintained and extended in Zeppe-Lin Linux.
; 
; # AUTHORS
; 
; Original implementation by Per Liden and the CRUX team.
; Extended and maintained by Alex Savca and the Zeppe-Lin Linux project.

# SECURITY CONSIDERATIONS

The *pkgmk* utility must *not* be run as the real superuser.
Builds should be performed under *fakeroot*(8) or an equivalent
environment, which records ownership and modes without requiring
actual root privileges.
Running *pkgmk* as root risks allowing untrusted build scripts to
alter system files.
Always confine builds to a dedicated user and controlled working
directory.

; vim: ft=scdoc cc=72 tw=70
